stages:
  - build
  - deploy

build-app:
  stage: build
  image: docker:latest
  services:
  - docker:dind
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - echo "=====Build and Push Docker Image====="
    - cd app
    - docker build . -t fiardika/privy:$CI_COMMIT_SHORT_SHA
    - docker push fiardika/privy:$CI_COMMIT_SHORT_SHA
    - echo "=====Build and Push Complete====="

build-test-app: 
  stage: build
  image: docker:latest
  services:
  - docker:dind
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - echo "=====Build and Push Docker Image====="
    - cd app-test
    - docker build . -t fiardika/test-app:latest
    - docker push fiardika/test-app:latest
    - echo "=====Build and Push Complete====="

deploy-app:
  stage: deploy
  before_script:
    - chmod 400 $PEM
  script:
    - ssh -o StrictHostKeyChecking=no -i $PEM ubuntu@$EC2_IP "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD &&
        docker ps -aq | xargs docker stop | xargs docker rm &&
        docker run -d -p 3000:3000 fiardika/privy:$CI_COMMIT_SHORT_SHA"

deploy-app-test:
  stage: deploy
  before_script:
    - chmod 400 $PEM
  script:
    - ssh -o StrictHostKeyChecking=no -i $PEM ubuntu@$EC2_IP "
        kubectl apply -f /home/ubuntu/app-test.yml